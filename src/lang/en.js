export default {
  guide: {
    description: 'The guide page is useful for some people who entered the project for the first time. You can briefly introduce the features of the project. Demo is based on ',
    button: 'Show Guide'
  },
  route: {
    dashboard: 'Dashboard',
    index: 'Index',
    introduction: 'Introduction',
    documentation: 'Documentation',
    guide: 'Guide',
    permission: 'Permission',
    pagePermission: 'Page Permission',
    directivePermission: 'Directive Permission',
    charts: 'Charts',
    keyboardChart: 'Keyboard Chart',
    lineChart: 'Line Chart',
    mixChart: 'Mix Chart',
    example: 'Example',
    tab: 'Tab',
    form: 'Form',
    errorPages: 'Error Pages',
    page401: '401',
    page404: '404',
    errorLog: 'Error Log',
    theme: 'Theme',
    i18n: 'I18n',
    externalLink: 'External Link',
    newmodel: 'Data Flow',
    dfilemanage: 'Operation Center',
    datacontrol: 'Data Management',
    process: 'Data Process',
    dflowmanage: 'Data Flow Manage',
    realtimeflow: 'Real-time Flow',
    realtmonitor: 'Real-time Monitor',
    runreport: 'Operation report',
    msys: 'System',
    muser: 'User',
    mrole: 'Role',
    prole: 'Group Authorization',
    permManage: 'Permission Management',
    faultManagement: 'Fault Management',
    messageManagement: 'Message Management',
    myMessage: 'My Messages',
    createMessage: 'Create Message',
    allMessage: 'Messages',
    receiveMessage: 'Receive Message',
    user: 'Personal Center',
    edit: 'Edit Profile',
    changepsd: 'Change Password',
    settingController: 'Setting Center',
    modelManagement: 'Model Management',
    preModel: 'Preprocessing',
    trainedModel: 'Trained',
    piplineModel: 'Pipline',
    taskmonitoring: 'Task Monitoring',
    taskdetail: 'Task detail',
    tasklist: 'Task list',
    deviceManage: 'Device',
    pipeline: 'PIPLINE edit',
    hismessage: 'History Data',
    shimessage: 'Real-time Data',
    databaseinfo: 'Database',
    tableinfo: 'Data-table',
    crewmessage: 'Device Information',
    historycrew: 'History Database Information',
    tablemescrew: 'History Data-table Information',
    crewshi: 'Device Real-time Data',
    AlgorithmCreate: 'Create ALG',
    AlgorithmEdit: 'Edit ALG',
    AlgorithmView: 'View ALG',
    AlgorithmList: 'ALG',
    Algmanagement: 'ALG Management',
    tabdetail: 'View Detail',
    homePage: 'homePage',
    bannerManage: 'banner configuration',
    viewManage: 'video configuration',
    realflow: 'Real flow',
    overview: 'Monitoring overview',
    monitor: 'Monitor',
    devicemonitor: 'Overview of equipment',
    alarmConfig: 'Alarm settings',
    alarmRule: 'Alarm rule setting',
    alarmCode: 'Alarm code setting',
    workbench: 'Workbench',
    sourceconfig: 'Historical data',
    shishi: 'real time',
    ALGList: 'Algorithm management',
    backmanage: 'Back-stage management',
    userManage: 'user management',
    tagManage: 'Label configuration',
    permConfig: 'Permission configuration',
    messageCenter: 'Message center',
    helpCenter: 'Help center',
    roleManage: 'group management',
    normal_setting: 'General settings',
    templateConfig: 'Template configuration',
    backToFront: 'Return to operation foreground',
    current_set: 'General settings',
    change_password: 'Change Password',
    reportConfiguration: 'Report configuration',
    template: 'Template',
    serviceAbout: 'Service'
  },
  // system homepage
  homepage: {
    mindex: {
      nav_title: 'CS&S AI',
      title: 'CS&S Industrial SmartCloud',
      subtitle: 'From data to knowledge, from separation to convergence',
      joinus: 'Join Us',
      careTitle: 'Solve the core problems of industrial manufacturing',
      careShow1: 'Data Aggregation',
      careShow2: 'Artificial Intelligence',
      careShow3: 'Real-time Warning',
      careShow4: 'Industrial Internet',
      careShow1t: 'Breaking data islands, rapid integration of industrial data',
      careShow2t: 'Provide rich algorithm models for industrial intelligence scenarios',
      careShow3t: 'Visual Training Algorithmic Model',
      careShow4t: 'Individualized large screen monitoring and early warning',
      careShow1d: 'Provide industrial data architecture to support real-time data upload and local data file upload',
      careShow2d: 'Provide engineering tools for algorithmic management, configuration and deployment, define data flow standards, standardize algorithmic interfaces, and greatly improve algorithmic wearability',
      careShow3d: 'The algorithm model generation is realized by drag-and-drop interaction, which provides data preprocessing, machine learning algorithm, model evaluation and prediction functions.',
      careShow4d: 'Provide data processing solutions, interactive reuse of algorithm models, docking real-time data and visual components, personalize to meet different detection needs, provide real-time fault early warning',
      aboutm: 'About CS&S SmartCloud',
      runmodel: 'Start Model',
      address: '18 changsheng road, changping, Beijing',
      email_address: 'Â© CSS.com.cn 2018. '
    },
    mjoin: {
      title: 'Participation in energy, rail transit and other industries',
      ldes: 'Early Warning of Unit Fault in HARBIN ELECTRIC',
      rdes: 'Rail Transit Temperature Prediction'
    }
  },
  // errorpage 401/404
  errorPages: {
    title: 'ERROR',
    back_home: 'Back to Homepage',
    page401: {
      title: '401',
      not_found: 'I can not find it!',
      not_permission: 'Or you do not have permission to access this page',
      contact_admin: 'if you have any questions, please contact the administrator',
      go_to: 'or you can go to:',
      dialog_msg: 'Just look at'
    },
    page404: {
      title: '404',
      oops: 'OOPS!',
      copyright: 'copyright',
      company: 'CS&Screenfull',
      check: 'Please check whether the url you entered is correct. Or click the following button to return to the homepage. You can also send error reports.',
      message: 'You can not access this page...'
    }
  },
  // term
  term: {
    '0.25': '0.25',
    '0.75': '0.75',
    enTozh: {
      min: 'Min',
      max: 'Max',
      mean: 'Mean',
      abnormal_value: 'Abnormal Value',
      effective_value: 'Effective Value',
      median: 'Median',
      missing_value: 'Missing Value',
      outlier: 'Outlier',
      stddev: 'Standard Deviation',
      unique_value: 'Unique Value',
      variance: 'Variance',
      variation_coefficient: 'Variable Coefficient',
      distinct_num: 'Distinct number',
      feature_type: 'Feature type'
    }
  },
  // settings/user center
  settings: {
    setting_system: 'System Settings',
    language: 'Language',
    setting_env: 'Environment Settings',
    setting_message: 'Notification Settings',
    message: 'Personal info',
    configuration: 'System Settings',
    setting_account: 'Account Settings',
    show_userdata: 'Basic information',
    change_userdata: 'Change personal info',
    change_password: 'Change password',
    switchLanguage: 'Switch Language Success',
    reset_password_success: 'Password changed successfully, please login again.'
  },
  // form rules
  rules: {
    require_qq: 'QQ is required.',
    invalid_qq: 'QQ is invalid.',
    require_number: 'Number is required.',
    invalid_number: 'Number is invalid, maximum of 2 decimal places',
    require_IDCard: 'Id number is required.',
    invalid_IDCard: 'Id number is invalid.',
    require_integer: 'Integer is required.',
    invalid_integer: 'Integer is invalid.',
    require_username: 'Username is required.',
    invalid_username: 'Username is invalid.',
    invalid_username_length: 'Use between 3-15 alphanumeric characters.',
    require_password: 'Password is required.',
    invalid_password_length: 'Use between 6-18 characters.',
    invalid_password_symbol: 'Only letters, numbers and the underline are valid.',
    require_filename: 'This is required.',
    invalid_filename: 'This is invalid.',
    require_name: 'This is required.',
    invalid_name: 'The name is a letter, a number, an underscore, a letter, a number, an underscore, a combination of Chinese.',
    invalid_name_en: 'This is invalid.',
    duplicate_name: 'This is already in use.',
    duplicate_name_template_enterprise: 'This Enterprise Template Name is already in use.',
    duplicate_name_template_personal: 'This Enterprise Template Name is already in use.',
    require_modelname: 'This is required.',
    invalid_modelname: 'This is invalid.',
    invalid_phonenumber: 'Only Chinese mobile phone numbers are supported.',
    require_tableheader: 'Choose header.',
    require_encoding: 'Choose encoding.',
    require_files: 'Choose file sets.',
    require_desc: 'Input description.',
    require_emailcode: 'Verification code is required.',
    require_email: 'Email is required.',
    invalid_email: 'Email is invalid.',
    password_again: 'Please enter your password again.',
    duplicate_username: 'The username is already in use.',
    invalid_second_password: 'Your two times input the password is inconsistent.',
    duplicate_email: 'The email address is already in use.',
    invalid_new_password: 'The new password cannot be the same as the old password.',
    require_oldpassword: 'Old password is required.',
    invalid_oldpassword: 'The password is incorrect. Please enter it again.',
    required: 'This is required.',
    required_select: 'This is required.',
    require_ipport: 'IP and Port is required.',
    invalid_ipport: 'IP or Port is invalid.',
    invalid_ip: 'IP is invalid.',
    invalid_port: 'Port is invalid.',
    invalid_port_symbol: 'Port between 0 and 1023 are not allowed',
    invalid_database: 'Database name is invalid.',
    invalid_datatable: 'Datatable name is invalid.',
    invalid_image_symbol: 'Image format is JPG, JPEG, PNG.',
    invalid_video_symbol: 'Video format is mp4 only.',
    require_hdfslink: 'hdfs link is required.',
    invalid_filetype: 'Link type is invalid.',
    not_null: 'Not Null',
    // 1.4.1
    username: 'User name can only be lower letter and number combined',
    userEname: 'User name should be chinese',
    require_userEName: 'Please input user name',
    special: 'Special symbol is not allowed',
    service_name: 'Only be composed of lowercase letters, Numbers and middle and short lines, first only be a letter.'
  },
  // label
  labels: {
    title: 'Title',
    ge: '',
    count: 'count',
    reminder: 'Reminder',
    actions: 'Actions',
    name: 'Name',
    name_en: 'Name(en)',
    module: 'Module',
    parent_name: 'Parent',
    username: 'Username',
    user_id: 'User ID',
    password: 'Password',
    confirm_password: 'Confirm password',
    old_password: 'Old password',
    homepage: 'Homepage',
    id: 'ID',
    create_time: 'Create time',
    update_time: 'Update time',
    creator: 'Creator',
    reviewer: 'Reviewer',
    desc: 'Describe',
    status: 'Status',
    file_device: 'Devices/Files',
    edit: 'Edit',
    detail: 'Detail',
    delete: 'Delete',
    cancel: 'Cancel',
    confirm: 'Confirm',
    update: 'Update',
    uploadSuccess: 'Upload Success',
    uploadFaild: 'Upload Failed',
    deleteSuccess: 'Delete Success',
    deleteFaild: 'Delete Failed',
    getFaild: 'get Failed',
    loading: 'LOADING...',
    fresh: 'Fresh',
    all: 'All',
    numb: 'No.',
    label: 'Label',
    label_colname: 'column name',
    label_const: 'const value',
    not_available: 'Not Available',
    comp_transfer: {
      availableColumns: 'Available Columns',
      selectedColumns: 'Selected Columns'
    },
    user: {
      user: 'User',
      random_code: 'User Code',
      email: 'Email',
      email_code: 'Email Code',
      belong_group: 'Group',
      last_login: 'Last login',
      select_group: 'Group'
    },
    group: {
      group: 'Group',
      group_name: 'Group name',
      group_level: 'Group level'
    },
    perm: {
      perm: 'Permissions'
    },
    alg: {
      node_name: 'name(en)',
      node_zname: 'name(zh)',
      model_type: 'Model type',
      type: 'Filder type'
    },
    devicemanage: {
      title: 'Device',
      device_id: 'Device ID',
      device_name: 'Device name',
      device_name_en: 'Device name(en)',
      group: 'Group',
      history: 'History',
      realtime: 'Realtime',
      origin: 'Origin',
      origin_name: 'Origin name',
      ip_port: 'IP_Port',
      ip: 'IP',
      port: 'Port',
      kafka: 'kafka',
      kafka_topic: 'kafka_topic',
      belong_device: 'Device',
      n_input: 'Input count',
      n_output: 'Output count',
      slice_time: 'slice_time',
      files: 'File list',
      field_zname: 'field_zname',
      field_name: 'field_name',
      field_chart: 'field_chart',
      field_datanum: 'field_datanum',
      field_empty: 'field_empty',
      field_groundthd: 'field_groundthd',
      field_monitorids: 'field_monitorids',
      table_datatype: 'table_datatype',
      field_period: 'field_period',
      field_tableno: 'field_tableno',
      field_type: 'field_type',
      field_unit: 'field_unit',
      belong_database: 'Database',
      datatable_type: 'Datatable type',
      database_type: 'Database type',
      database_name: 'Database name',
      database_name_en: 'Database name(en)',
      datatable_name: 'Datatable name',
      datatable_name_en: 'Datatable name(en)',
      datatable_desc: 'Datatable info',
      database: 'Database',
      datatable: 'Datatable',
      table_datanums: 'table_datanums',
      table_yszid: 'table_yszid',
      workcon_fieldids: 'workcon_fieldids'
    },
    homemanage: {
      banner: 'banner',
      thumbnail: 'Thumbnail',
      active: 'Active',
      config_uri: 'Config uri',
      sort: 'Sort',
      image: 'Image',
      is_active: 'Whether to active',
      video: 'Video',
      video_name: 'Video name',
      other_module: 'Other module'
    },
    messagemanage: {
      message: 'Message',
      system_message: 'System message',
      error_message: 'Error message',
      title: 'Title',
      distribute: 'Distribute',
      content: 'Content',
      to: 'To',
      company_users: 'Company users',
      system_users: 'System users'
    },
    faultmanage: {
      error_time: 'Time',
      error_level: 'Level',
      error_type: 'Type',
      error_summary: 'Summary',
      all_device: 'All devices',
      all_error_type: 'All type',
      all_alg: 'All algorithms',
      device: 'Device',
      time: 'Time range'
    },
    runreport: {
      runreport: 'Run Report',
      name: 'Name',
      monitor_device: 'Monitor Device',
      report_type: 'Report Type',
      period: 'Statistic Period',
      create_time: 'Created Time',
      template: 'Template'
    },
    modelmanage: {
      preproccess: 'Preproccess',
      trained: 'Trained',
      preproccess_name: 'Pre-schema',
      trained_name: 'Trained-model',
      belong_project: 'Project',
      authoruser: 'Authuser'
    },
    dfilemanage: {
      hisdata: 'History data',
      realdata: 'Real-time data',
      data_preview: 'Preview',
      fileinfo: 'Info',
      date: 'Date',
      filetype: 'Type',
      filesize: 'Filesize',
      create: 'Create',
      file: 'File',
      file_id: 'File ID',
      filehead: 'File header',
      filecode: 'File code',
      link: 'Link',
      origin: 'Origin'
    },
    flow: {
      process_name: 'Process',
      belong_file_device: 'Devices/Files',
      running_state: 'Status',
      running: 'Running',
      not_run: 'Not run',
      run_logs: 'Running log',
      model_name: 'Model name',
      source: 'Resoult name',
      batch: 'BatchID',
      featurerule_set: 'Feature column rule settings',
      feature_col_name: 'Feature column name',
      func_rule: 'function rule',
      edit_rule: 'edit rule',
      create_label: 'create label',
      create_map: 'New Segment',
      yconst: 'y is constant',
      ynic: 'y is the fitted value',
      realtime_flow: 'realtime flow',
      period_flow: 'period flow',
      table_structor: 'table structor',
      panel_json: 'panel json'

    },
    task: {
      application_id: 'Application ID',
      proxy_user: 'Proxy user',
      session_kind: 'session-kind',
      command: 'Command',
      view_command: 'View command',
      progress: 'Progress',
      result_state: 'Result status',
      result: 'Result',
      view_results: 'View results',
      experiment_name: 'Expriment name'
    },
    process: {
      plan_name: 'Scheme',
      originalcolumn: 'Original column',
      modifycolumn: 'Modify column',
      parameters: 'Parameters'
    },
    newModel: {
      success: 'Add Success',
      fail: 'Add Failed',
      getFaild: 'Failed'
    },
    alarm: {
      fault_code: 'Fault Code',
      fault_name: 'Fault Name',
      fault_kind: 'Fault Type',
      fault_desc: 'Fault Describe',
      fault_origin: 'Fault Origin',
      action_opinion: 'Processing opinion',
      other_info: 'Others',
      rule_name: 'Rule Name',
      rule_desc: 'Rule Describe',
      data_model: 'Associated Model',
      error_code: 'Associated FaultCode',
      alarm_rule: 'Alarm rules',
      is_show: 'Start Rule',
      normal_rules_list: 'Conditions',
      rule_start: 'Start',
      rule_stop: 'Stop',
      rule_status: 'Rule Status',
      input_value: 'Value',
      model_prop: 'Model Prop',
      column_prop: 'Column Prop'
    },
    template: {
      name: 'Name',
      desc: 'Description',
      type: 'Type',
      share: 'Share',
      personal: 'Personal',
      content: 'Content',
      shareTemplate: 'Share',
      personalTemplate: 'Personal'
    },
    realTime: {
      add_realTime_origin: 'Add RealTime Origin',
      realtime_flow: 'RealTime Flow',
      origin: 'Origin',
      add_time: 'Added Time',
      realtime_monitor: 'Look up RealTime Monitor'
    },
    period: {
      add_period_data: 'Add Cycling Data',
      period_flow: 'Cycling Flow',
      data_base: 'Database',
      data_sheet: 'Data Table',
      data_base_name: 'Database Name',
      data_table_name: 'DataTable Name',
      structure: 'Table Structure',
      add_time: 'Add Time',
      recent_update: 'Recent Update',
      add_period_flow: 'Add Cycling Flow',
      model_name: 'Related Model',
      operate_cycle: 'Excute Cycle',
      per_day: 'Per Day',
      per_week: 'Per Week',
      per_month: 'Per Month',
      start_time: 'Start Time',
      next_time: 'Next execute time',
      operate_state: 'Success/Executed',
      enable: 'Enable',
      period_monitor: 'Lookup Cycling Monitor',
      data_capture_region: 'Data capture region',
      excutetime: 'Execute time',
      status: 'Status',
      task_name: 'Task name',
      data_name: 'Data name',
      period_data: 'Cycling data',
      recent_execute: 'Recent execute time',
      flow_run_info: 'Cycling flow run info',
      is_total: 'total region',
      is_increasement: 'increasement',
      data_explorer: 'Data Explorer',
      restart: 'Restart',
      failed: 'failed',
      success: 'success',
      executing: 'executing'
    },
    service: {
      model: {
        index: 'Model',
        name: 'Model Name',
        detail: 'Model Detail',
        callmodel: 'Model Call',
        callinfo: 'Model Call Info',
        test: 'Test',
        status_deploying: 'Deploying',
        status_stop: 'Stop',
        status_running: 'Runing',
        status_error: 'Error',
        url: 'URL',
        is_publish: 'isPublish',
        test_normal_tab: 'Normal',
        test_json_tab: 'Json'
      },
      filter_name_placehold: 'input name',
      name: 'Service Name',
      add: 'Add Service',
      edit: 'Edit Service',
      publish: 'Publish',
      publish_on: 'Publish ON',
      publish_off: 'Publish OFF',
      input: 'Input',
      output: 'Output'
    }
  },
  // strings
  strings: {
    loading: 'LOADING...',
    saving: 'SAVING...',
    select: 'Please select',
    custom: 'Custom',
    input: 'Please input',
    yes: 'YES',
    no: 'NO',
    to: ' - ',
    start_time: 'Start time',
    end_time: 'End time',
    no_desc: 'No description',
    placeholder: 'Placeholder',
    device: 'Device',
    file: 'File',
    rename: 'Rename',
    setting: 'setting',
    be_selected: 'be selected',
    be_setting: 'be setting',
    select_field: 'Field',
    select_type: 'Type',
    column: 'column',
    row: 'row',
    col: 'column',
    fuzzy_search: 'Fuzzy Search',
    all: 'All',
    null: 'NULL',
    table: 'Table',
    chart: 'Chart',
    parameter: 'Parameter',
    login: {
      title: 'Login Form',
      logIn: 'Log In',
      logOut: 'Log Out',
      username_placeholder: 'Enter your username',
      password_placeholder: 'Enter your password',
      any: 'Any',
      thirdparty: 'Or connect with',
      thirdpartyTips: 'Can not be simulated on local, so please combine you own business simulation! ! !'
    },
    register: {
      name: 'register',
      start_reg: 'I am registered, now',
      subtitle: 'Create your new account',
      timeout_code: 'Timeout, Please resend the validation.',
      sended_code: 'Verification code has been sent, please check the email'
    },
    user: {
      permission: 'Permission statement',
      update_group: 'Update group',
      user_perm_alert1: 'To ensure that the administrator has the highest authority in the system, ',
      user_perm_alert2: 'edit administrator group not allowed, ',
      user_perm_alert3: 'and delete administrator account not allowed.',
      delete_user: 'Are you sure you want to delete the user?'
    },
    group: {
      update_perm: 'Update permission',
      add_user: 'Add user',
      perms: 'Permissions',
      user_placeholder: 'Username or user number',
      has_group: 'Has group',
      delete_group: 'Are you sure you want to delete the group?',
      delete: 'Delete',
      delete_children: 'group? Will delete all groups under the group ( ',
      super_group: 'Super management',
      company_group: 'Enterprise management',
      common_group: 'Ordinary'
    },
    perm: {
      delete_perm: 'Are you sure you want to delete the permission?',
      edit_group_perm: 'Edit group permissions:',
      back_group: 'Back',
      perm_origin: 'Permission metadata',
      menu: 'Menu',
      button: 'Button',
      interface: 'Interface',
      set_group_perm: 'Tips: Check permissions for group.',
      perm_placeholder: 'Permission name or permission value',
      roles: 'Your permissions',
      switchRoles: 'switch permissions'
    },
    alg: {
      search: 'Keyword',
      dialog_title1: 'select type',
      dialog_title2: 'Modify the confirmation',
      dialog_detail1: 'Directory or algorithm',
      dialog_detail2: 'Parent node',
      delete_alg: 'Are you sure you want to delete the algorithm?',
      delete_directory: 'Are you sure you want to delete the directory?',
      first_level: '*first level*',
      custom_alg: 'Custom Algorithm',
      edit_custom_alg_python_code: 'Add custom Python code',
      edit_custom_alg_code: 'Edit',
      create_custom_alg_code: 'Edit',
      view_custom_alg_code: 'View',
      download_help: 'View the help document',
      download_sample: 'Download the sample code',
      custom_alg_code: 'Custom Algorithm Code'
    },
    devicemanage: {
      update_device: 'Update device',
      delete_device: 'Are you sure you want to delete the device?',
      delete_origin: 'Are you sure you want to delete the origin?',
      delete_database: 'Are you sure you want to delete the database?',
      delete_datatable: 'Are you sure you want to delete the datatable?'
    },
    homemanage: {
      delete_banner: 'Are you sure you want to delete the file?',
      batch_delete_banner: 'Make sure to batch delete all checked files?',
      view_name: 'Input video name',
      click_to_upload_video: 'Click here to upload video',
      delete_video: 'Are you sure you want to delete the video?',
      download_video: 'Are you sure you want to update the video?',
      publish_video: 'Are you sure you want to publish the video?',
      cancel_video: 'Are you sure you want to withdraw the video?',
      max_videos: 'Cannot to add: Video storage has reached an upper limit'
    },
    modelmanage: {
      author: 'Author',
      authorized: 'Authorized',
      unauthorized: 'Unauthorized',
      delete_preproccess: 'Are you sure you want to withdraw the preproccess schema?',
      delete_trained: 'Are you sure you want to withdraw the trained model?'
    },
    faultmanage: {
      download_report: 'Download report',
      latest_week: 'latest-week',
      latest_one_month: 'latest-one-month',
      latest_three_month: 'latest-three-month',
      date_max: 'No more than 22 days.',
      processed: 'Preocessed',
      fault_report: 'Report',
      fault_report_uploading: 'PDF Uploading...'
    },
    runreport: {
      create_report: 'Create Report',
      name: 'Report Title',
      device: 'Monitored Device',
      period: 'Statistic Period',
      select_template: 'Select Template',
      week: 'Last Week',
      month: 'Last Month',
      quarter: 'Last Quarter',
      customize: 'Customized',
      week_report: 'Week',
      month_report: 'Month',
      quarter_report: 'Quarter'
    },
    dfilemanage: {
      delete_file: 'Are you sure you want to delete the file?',
      open_kafka: 'Open kafka',
      close_kafka: 'Close kafka',
      publicFileList: 'Public file list',
      privateFileList: 'Private file list',
      addData: 'Add Data',
      addDB: 'Add Database',
      addCsv: 'Add CSV',
      fileCsv: 'Upload CSV',
      fileHdfs: 'Has HDFS',
      fileHive: 'HIVE',
      shiorg: 'Real-time origin',
      fileupload: 'Upload file',
      fileuploading: 'Uploading',
      fileupload_max: ' Only CSV files can be uploaded, and no more than 50M.',
      is_private: 'Private',
      private_desc: 'Private: visible only to yourself, non-private: visible to group users.',
      has_table_head: 'Has header',
      not_has_table_head: 'No header',
      name_rule: '(Please set the name according to the rules of data acquisition module!)'
    },
    dataoutput: {
      dataOutput: 'Output',
      areaDataOutput: 'Area Output',
      toHistory: 'Save To Histry Data',
      toLocal: 'Download To Local',
      saveToHistory: 'Save To Histry Data',
      name: 'Name',
      desc: 'Description',
      selFields: 'Select Fields',
      is_private: 'Private',
      xrange: 'Range of Axis-x',
      validator: {
        fieldEmpty: 'Please select at least one field for saving!',
        xrange: 'Axis-x range error!',
        xrangeEmpty: 'Axis-x range is empty!',
        nameEmpty: 'Name is empty!'
      }
    },
    flow: {
      dflowmanage: 'Process management',
      realtimeflow: 'realtimeflow',
      delete_flow: 'Are you sure you want to delete the flow?',
      center: 'Center adaptation',
      options: 'Options',
      threshold_value: 'Threshold value',
      charts: 'Charts',
      none: 'None',
      select_device: 'Device',
      select_project: 'Project',
      select_user: 'User',
      add_flow: 'Add flow',
      to_process: 'Data processing',
      operation_records: 'Operation records',
      set_filter: 'Set filter',
      set_threshold: 'Set threshold',
      select_target_column: 'Target columns',
      target_column: 'Target column',
      select_operator: 'Operator',
      input_operator: 'Operator',
      operator: 'Operator',
      field: 'Field',
      wait_draw: 'Wait for draw',
      set_chart: 'Data Exploration',
      filling: 'Filling',
      select_chart_type: 'Chart type',
      select_chart_type2: 'Statistical methods',
      sequence_default: 'sequence as default',
      overwritten: '* If the model is saved, it is overwritten',
      assessment_result: 'Assessment result-',
      preview_assessment: 'Preview assessment result',
      save_model: 'Save model',
      add_threshold: 'Edit threshold',
      g_operator: 'International standard',
      h_operator: 'Industry Standard',
      c_operator: 'Manufacturer Standard',
      running: 'Project is in progress and operation is prohibited!',
      piperuning: 'Project is in progress!',
      output_log: 'Print log',
      log_none: 'Log is none',
      error_log: 'Print error log',
      axial_trajectory: 'Axial trajectory',
      spectrum: 'Spectrum',
      autocorrelation: 'Autocorrelation graph',
      partial_correlation: 'Partial correlation graph',
      statistics_column: 'Statistics column',
      timecol: 'Time column',
      critical_value: 'Critical value',
      timing_prediction: 'Timing prediction',
      original_sequence: 'Original sequence',
      order_difference: 'Order difference',
      stable: 'stable',
      nostable: 'no stable',
      less_significant: 'Less than significant level 0.05',
      greater_significant: 'Significant level greater than or equal to 0.05',
      itisstable: 'When it is less than the threshold corresponding to the significant level, it is stable',
      correlation: 'The result is close to 0 positive correlation, close to 4 negative correlation, and close to 2 without correlation.',
      white_noise: 'p-value is greater than or equal to 0.05, which is white noise',
      nowhite_noise: 'p-value is less than 0.05, which is non-white noise',
      white_noise_test: 'White noise test',
      col2name: 'Field alias settings',
      mylabel_rule: 'Custom label rules',
      myfunc_rule: 'Custom Function Rules',
      mymaping_rule: 'Custom Segmentation Mapping Rules',
      mysql_rule: 'Custom SQL Rules'

    },
    process: {
      create_plan: 'Create scheme',
      set_plan: 'Set to execution schema',
      rename_plan: 'Rename schema',
      alg: 'Algorithm',
      select_alg: 'Algorithm',
      cross: 'Cross type',
      dimension: 'Dimension control',
      results_area: 'Results area'
    },
    realtmonitor: {
      realmodel_error: 'Select realtime resource and module',
      select_source: 'Select realtime resource',
      select_module: 'Select module'
    },
    alarm: {
      action_opinion_text: 'Processing opinion...',
      select_model: 'Model',
      select_status: 'Status',
      all_select_model: 'All Model',
      all_select_status: 'All Status',
      normal_mode: 'Normal Mode',
      expert_mode: 'Expert Mode',
      custom_rule_editor: 'Custom...',
      delete_alarmrule: 'Are you sure you want to delete the rule?',
      batch_delete_alarmrule: 'Are you sure you want to delete these rules?',
      delete_faultcode: 'Are you sure you want to delete the code?',
      missing_model: 'The model could not be found and may have been deleted.'
    },
    template: {
      origindata: 'Origin Data',
      origindata_attr: 'Origin Data Attribute',
      origindata_param_attr: 'Origin Data Parameter',
      model_attr: 'Model Attribute',
      none_model_attr: 'None',
      select_model: 'Select model',
      select_pipeline: 'Select Pipeline',
      model_list: 'Model List',
      model: 'Model',
      delete_confirm: 'Are you sure you want to delete this template?',
      back_list: 'Discarding unsaved content',
      null_value: 'NULL',
      specialtable_type: 'Table Type',
      specialtable_model: 'Model',
      need_parameter: 'Need Parameter',
      title_model_alarm_params: 'Monitoring diagram',
      chartdata_get_null: 'Get Data NULL',
      chartdata_get_error: 'Get Data Error',
      chartdata_need_parameter: 'Need Parameter',
      not_fault_table: 'Not Fault Table',
      fault_table: 'Fault Table',
      custom_fault_table: 'Custom Fault Table',
      errortime_value: 'The value at the time point of failure is',
      alarm_rule_is: 'The Alarm Rule is',
      mw: 'MW',
      kw: 'KW',
      special_table_type: 'Special Table Type'
    },
    service: {
      model: {
        delete_confirm: 'The service will not be available after deletion. Are you sure to delete?',
        update_confirm: 'Are you sure to update the service? The service will be redeployed after the update.',
        batch_update_confirm: 'Are you sure to update these selected services? The service will be redeployed after the update.'
      }
    }
  },
  // button
  buttons: {
    refresh: 'Refresh',
    close: 'Close',
    closeOthers: 'CloseOthers',
    closeAll: 'CloseAll',
    actions: 'Actions',
    back: 'Back',
    add: 'Add',
    edit: 'Edit',
    detail: 'Detail',
    preview: 'Preview',
    delete: 'Delete',
    create: 'Create',
    update: 'Update',
    cancel: 'Cancel',
    confirm: 'Confirm',
    submit: 'Submit',
    reset: 'Reset',
    search: 'Search',
    view: 'View',
    upload: 'Upload',
    download: 'Download',
    publish: 'Publish',
    next: 'Next',
    run: 'Run',
    save: 'Save',
    perform: 'Perform',
    generate: 'Generate',
    batch_delete: 'Batch delete',
    batch_update: 'Batch update',
    batch_create: 'Batch create',
    click_start: 'Click to start',
    click_stop: 'Click to stop',
    screening: 'Screening',
    open: 'Open',
    test: 'Test',
    copy: 'Copy',
    register: {
      get_email_code: 'Click to get the code'
    },
    alg: {
      folder: 'Directory',
      alg: 'Algorithm'
    },
    devicemanage: {
      database: 'Database',
      datatable: 'Datatable'
    },
    messagemanage: {
      read_all_message: 'Read all',
      clean_all_message: 'Clean all',
      backToList: 'Back'
    },
    modelmanage: {
      accredit: 'Authorization'
    },
    faultmanage: {
      report: 'Print PDF report',
      new_report: 'Create New Report',
      reset: 'Reset'
    },
    dfilemanage: {
      selectFile: 'Select file'
    },
    dflowmanage: {
      backflow: '< Back flow',
      allflows: 'All flows >'
    },
    flow: {
      runFlow: 'Run',
      stopFlow: 'Stop',
      stopAllFlow: 'Stop all',
      delete_para: 'Delete parameter',
      add_para: 'Add parameter',
      draw: 'Draw',
      add_chart: 'Generate chart',
      delete_chart: 'Delete chart',
      full_size: 'Full size',
      recover_size: 'Recover_size',
      expand: 'Expand',
      up: 'Up',
      select_chart: 'Select chart',
      select_func: 'Select function',
      post_prodiction_exp: 'Save combined model',
      sava_pipline_err1: 'Please select an experimental node!',
      sava_pipline_err2: 'The selected process must contain at least two nodes!'
    },
    template: {
      create: 'Create Template',
      uploadPdf: 'Upload and export'
    },
    service: {
      model: {
        batch_update: 'Batch Update',
        batch_publish_on: 'Batch Publish ON',
        batch_publish_off: 'Batch Publish OFF',
        test: 'Test',
        callinfo: 'Model Call Info'
      }
    }
  },
  // messages
  messages: {
    get_faild: 'Data fetch failed',
    name_psd_error: 'Name or password is wrong',
    network_error: 'network or server error',
    success: 'Success',
    failed: 'Failed',
    add_set: 'Add Setting',
    create_success: 'Create success',
    create_failed: 'Create failed',
    update_success: 'Update success',
    update_failed: 'Update failed',
    batch_update_success: 'Batch update success',
    batch_update_failed: 'Batch update failed',
    add_success: 'Add success',
    add_failed: 'Add failed',
    delete_success: 'Delete success',
    delete_failed: 'Delete failed',
    batch_delete_success: 'Batch delete success',
    batch_delete_failed: 'Batch delete failed',
    upload_success: 'Upload success',
    upload_failed: 'Upload failed',
    publish_success: 'Publish success',
    publish_failed: 'Publish failed',
    delete_cancelled: 'Delete cancelled',
    cancel_operate: 'Cancel operate',
    unavailable: 'Unavailable',
    not_open: 'Not open',
    request_error: 'Request error',
    not_user: 'Not user',
    fault_alarm: 'Fault alarm',
    none_batch: 'Not Selected',
    register: {
      reg_success: 'Registration successfully',
      reg_fail: 'Registration failed'
    },
    group: {
      update_perm_success: 'Update interface permissions success'
    },
    perm: {
      none: 'No permissions',
      not_found_groupid: 'Group permissions cannot be displayed: id cannot be found.',
      update_menu_perm_success: 'Updated menu permission success'
    },
    alg: {
      drag_success: 'Update success',
      drag_failed: 'Update failed',
      required_algorithm_name: 'Please enter the algorithm name',
      required_algorithm_name_error: 'Edit failed, with no algorithm name found',
      reset_original_template_code: 'Are you sure to reset to the original template code?'
    },
    homemanage: {
      image_upload_success: 'Upload image success',
      cancel_publish_success: 'Cancel publish success',
      cancel_publish_failed: 'Cancel publish failed'
    },
    modelmanage: {
      updateauth_success: 'Authorized user success',
      updateauth_failed: 'Authorized user failed'
    },
    dfilemanage: {
      open_success: 'Open success',
      open_failed: 'Open failed',
      close_success: 'Close success',
      close_failed: 'Close failed'
    },
    flow: {
      running_error: 'Running error',
      perform_error: 'Perform error',
      operate_success: 'Operate success',
      real_flow_error1: 'The real-time process state is not consistent with the data process state field.',
      real_flow_error2: 'Please create the process first',
      process_warning1: 'Please run the upstream node!',
      process_warning2: 'File not linked',
      options_error1: 'Parameter type error',
      options_error2: 'Upstream put back data error',
      options_error3: 'No data returned from upstream node',
      options_error4: 'Unlinked file',
      options_error5: 'No result on the front-node',
      options_error6: 'Input type error',
      options_error7: 'Please drag in the node first',
      options_error8: 'Need to link every node',
      incomplete_param: 'Incomplete parameters',
      speed_fast: 'Speed is to fast!',
      data_compile_err: 'Resource error!',
      not_available_space: 'No data returned, please check the available spaceï¼',
      select_time_range: 'Please select a time range!',
      parsing_error: 'Parsing error',
      already_exists: 'Already exists',
      throsheld_geterror: 'Throsheld request error!',
      postexperiment_err: 'Post prediction experiment error',
      runflow_info: 'Flow runing info',
      datapre_info: 'Data preview info',
      label_rules_warn: 'Field alias and feature column rules are not the same!',
      func_rules_warn: 'Field alias and feature column rules are not the same!'
    },
    pipeline: {
      save_checked_error: 'Verification failed',
      reset_error: 'Undo failed',
      have_alone_node: 'There are unconnected nodes',
      select_more: 'The number of nodes is at least two',
      add_node_error: 'Temporarily does not support adding new nodes'
    },
    process: {
      set_plan_success: 'Set success',
      set_plan_failed: 'Set failed',
      rename_plan_success: 'Rename success',
      add_plan_success: 'Add scheme success',
      fill_value: 'Need fill in the value'
    },
    realm: {
      select_columns: 'Select columns',
      save_chart: 'Saved',
      cannot_save: 'No chart to save!'
    },
    template: {
      save_error: 'Save Error',
      save_success: 'Save Success'
    },
    service: {
      json_duplicate_key_error: 'Duplicate Key',
      json_format_error: 'JSON Format Error',
      only_show_the_default_key: 'Only show the default key',
      test_success: 'Test Success',
      test_failed: 'Test Failed',
      edit_success: 'Edit Success',
      edit_failed: 'Edit Failed',
      update_success: 'Update Deploy Success',
      update_failed: 'Update Deploy Failed',
      batch_update_success: 'Batch Update Deploy Success',
      batch_update_failed: 'Batch Update Deploy Failed',
      batch_enabled_success: 'Batch Enables Success',
      batch_enabled_failed: 'Batch Enables Failed',
      batch_disabled_success: 'Batch Disables Success',
      batch_disabled_failed: 'Batch Disables Failed'
    }
  },
  // error tip modules
  errors: {
    email_error: 'Email checked failure',
    verify_error: 'Check Code Error',
    get_faild: 'Failed to get data',
    unknown_type_fault: 'Unknown type fault'
  },
  success: {
    change_success: 'Update success',
    delete_success: 'Delete success',
    handle_success: 'Process success',
    handle_faild: 'Process error'
  },
  confirm: {
    message: 'Confirm to delete?',
    message1: 'Confirm to delete this message?',
    message2: 'Confirm to delete the selected message?',
    message3: 'Confirm to delete this faultment?'
  },
  charts: {
    axis_trajectory: ' Axis Trajectory',
    spectrum: ' Spectrum',
    mahalanobis_distance: ' Mahalanobis Distance',
    histogram: ' Histogram',
    line: ' Line'
  },
  algorithmModel: {
    axis_trajectory: ' Axis Trajectory',
    spectrum: ' Spectrum',
    mahalanobis_distance: ' Mahalanobis Distance',
    personalized_threshold: ' Personalized Threshold',
    isolation_forest: ' Isolation Forest'
  }
}
